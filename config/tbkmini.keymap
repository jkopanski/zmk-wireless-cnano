#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

&mt {
    tapping-term-ms = <400>;
};

/ {
    behaviors {
        colemak_language: colemak_language {
            compatible = "zmk,behavior-tap-dance";
            label = "COLEMAK_LANGUAGE";
            #binding-cells = <0>;
            bindings =
                <&kp LA(LC(LG(P)))>,
                <&kp LA(LC(LG(O)))>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
    &kp BACKSLASH        &kp Q           &kp W         &kp F             &kp P    &kp B          &kp J              &kp L            &kp U            &kp Y  &kp APOSTROPHE   &kp LEFT_BRACKET
&colemak_language  &mt LCTRL A  &mt LEFT_ALT R    &mt LGUI S  &mt LEFT_SHIFT T    &kp G          &kp M  &mt RIGHT_SHIFT N  &mt RIGHT_GUI E  &mt RIGHT_ALT I     &mt RCTRL O      &kp SEMICOLON
    &kp LC(SPACE)        &kp Z           &kp X         &kp C             &kp D    &kp V          &kp K              &kp H        &kp COMMA          &kp DOT        &kp FSLH  &kp RIGHT_BRACKET
                                                &lt 1 ESCAPE       &lt 4 SPACE  &kp TAB    &lt 2 ENTER    &lt 3 BACKSPACE     &lt 5 DELETE
            >;
        };

        Media {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans            &trans        &trans        &trans          &trans  &trans    &out OUT_USB        &trans        &trans           &trans        &trans  &trans
&trans  &kp LEFT_CONTROL  &kp LEFT_ALT  &kp LEFT_GUI  &kp LEFT_SHIFT  &trans          &trans    &kp C_PREV  &kp C_VOL_DN  &kp C_VOLUME_UP    &kp C_NEXT  &trans
&trans            &trans        &trans        &trans          &trans  &trans    &out OUT_BLE  &bt BT_SEL 0  &bt BT_SEL 1     &bt BT_SEL 2  &bt BT_SEL 3  &trans
                                              &trans          &trans  &trans      &kp C_STOP   &kp C_PAUSE    &kp C_MUTE
            >;
        };

        Sym {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
    &kp HASH  &kp EQUAL  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp AMPERSAND          &kp PIPE    &trans           &trans         &trans         &trans             &trans  &trans
&kp ASTERISK   &kp PLUS      &kp LEFT_BRACKET      &kp RIGHT_BRACKET  &kp SEMICOLON         &kp COLON    &trans  &kp RIGHT_SHIFT  &kp RIGHT_GUI  &kp RIGHT_ALT  &kp RIGHT_CONTROL  &trans
   &kp SLASH  &kp MINUS        &kp LEFT_BRACE        &kp RIGHT_BRACE  &kp LESS_THAN  &kp GREATER_THAN    &trans           &trans         &trans         &trans             &trans  &trans
                                                     &kp EXCLAMATION     &kp DOLLAR      &kp QUESTION    &trans           &trans         &trans
            >;
        };

        Num {
            bindings = <
&trans  &kp LEFT_BRACKET  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp RIGHT_BRACKET    &trans           &trans         &trans         &trans             &trans  &trans
&trans     &kp SEMICOLON  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6          &kp EQUAL    &trans  &kp RIGHT_SHIFT  &kp RIGHT_GUI  &kp RIGHT_ALT  &kp RIGHT_CONTROL  &trans
&trans         &kp GRAVE  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3      &kp BACKSLASH    &trans           &trans         &trans         &trans             &trans  &trans
                                             &kp DOT  &kp NUMBER_0          &kp MINUS    &trans           &trans         &trans
            >;
        };

        Nav {
            bindings = <
&trans     &trans        &trans        &trans          &trans  &trans      &kp PAGE_UP       &kp HOME      &kp UP    &kp END        &trans  &kp K_REDO
&trans  &kp LCTRL  &kp LEFT_ALT  &kp LEFT_GUI  &kp LEFT_SHIFT  &trans    &kp PAGE_DOWN       &kp LEFT    &kp DOWN  &kp RIGHT  &kp CAPSLOCK  &kp K_UNDO
&trans     &trans        &trans        &trans          &trans  &trans           &trans    &kp K_PASTE  &kp K_COPY  &kp K_CUT        &trans      &trans
                                       &trans          &trans  &trans        &kp ENTER  &kp BACKSPACE  &kp DELETE
            >;
        };

        Fun {
            bindings = <
&trans  &kp F12  &kp F7      &kp F8     &kp F9                &trans    &trans           &trans         &trans         &trans             &trans  &trans
&trans  &kp F11  &kp F4      &kp F5     &kp F6                &trans    &trans  &kp RIGHT_SHIFT  &kp RIGHT_GUI  &kp RIGHT_ALT  &kp RIGHT_CONTROL  &trans
&trans  &kp F10  &kp F1      &kp F2     &kp F3  &kp LS(LG(NUMBER_4))    &trans           &trans         &trans         &trans             &trans  &trans
                         &kp ESCAPE  &kp SPACE               &kp TAB    &trans           &trans         &trans
            >;
        };
    };
};
